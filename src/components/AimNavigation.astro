---
// src/components/AimNavigation.astro
const { aimNumber } = Astro.props;
const currentAim = Number(aimNumber);

const prevLink = currentAim > 1 ? `/aims/${currentAim - 1}` : null;
const nextLink = currentAim < 100 ? `/aims/${currentAim + 1}` : null;
---
<nav class="aim-navigation">
    {prevLink && <a href={prevLink} class="nav-button prev">← Previous Aim</a>}
    
    <a href="/aims" class="nav-button home">Back to All Aims</a>
    
    {nextLink && <a href={nextLink} class="nav-button next">Next Aim →</a>}
</nav>

<style>
    .aim-navigation {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 3rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--border-color); /* Use new border-color variable */
    }
    .nav-button {
        display: inline-block;
        padding: 0.6rem 1.2rem;
        background-color: var(--primary-color); /* Use primary-color for main buttons */
        color: var(--background-color); /* Text color should contrast with button background */
        text-decoration: none;
        border-radius: 0.375rem; /* Consistent border-radius */
        font-weight: bold; /* Consistent font-weight */
        transition: background-color 0.2s ease, transform 0.2s ease;
    }
    .nav-button:hover {
        background-color: var(--button-hover-color); /* Use button-hover-color */
        transform: translateY(-2px);
    }
    .nav-button.home {
        background-color: var(--secondary-text-color); /* Use secondary-text-color for home button */
    }
    .nav-button.home:hover {
        background-color: var(--primary-color); /* Hover to primary color */
    }
</style>
